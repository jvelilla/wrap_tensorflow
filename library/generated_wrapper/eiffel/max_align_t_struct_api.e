note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class MAX_ALIGN_T_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	max_align_ll: INTEGER
			-- Access member `__max_align_ll`
		require
			exists: exists
		do
			Result := c_max_align_ll (item)
		ensure
			result_correct: Result = c_max_align_ll (item)
		end

	set_max_align_ll (a_value: INTEGER) 
			-- Change the value of member `__max_align_ll` to `a_value`.
		require
			exists: exists
		do
			set_c_max_align_ll (item, a_value)
		ensure
			max_align_ll_set: a_value = max_align_ll
		end

	max_align_ld: INTEGER
			-- Access member `__max_align_ld`
		require
			exists: exists
		do
			Result := c_max_align_ld (item)
		ensure
			result_correct: Result = c_max_align_ld (item)
		end

	set_max_align_ld (a_value: INTEGER) 
			-- Change the value of member `__max_align_ld` to `a_value`.
		require
			exists: exists
		do
			set_c_max_align_ld (item, a_value)
		ensure
			max_align_ld_set: a_value = max_align_ld
		end

feature {NONE} -- Implementation wrapper for struct max_align_t

	sizeof_external: INTEGER 
		external
			"C inline use <c_api.h>"
		alias
			"sizeof(max_align_t)"
		end

	c_max_align_ll (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((max_align_t*)$an_item)->__max_align_ll
			]"
		end

	set_c_max_align_ll (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((max_align_t*)$an_item)->__max_align_ll =  (long long)$a_value
			]"
		ensure
			max_align_ll_set: a_value = c_max_align_ll (an_item)
		end

	c_max_align_ld (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((max_align_t*)$an_item)->__max_align_ld
			]"
		end

	set_c_max_align_ld (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((max_align_t*)$an_item)->__max_align_ld =  (long double)$a_value
			]"
		ensure
			max_align_ld_set: a_value = c_max_align_ld (an_item)
		end

end
