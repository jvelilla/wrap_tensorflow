note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class TF_BUFFER_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	data: POINTER
			-- Access member `data`
		require
			exists: exists
		do
			Result := c_data (item)
		ensure
			result_correct: Result = c_data (item)
		end

	set_data (a_value: POINTER) 
			-- Change the value of member `data` to `a_value`.
		require
			exists: exists
		do
			set_c_data (item, a_value)
		ensure
			data_set: a_value = data
		end

	length: INTEGER
			-- Access member `length`
		require
			exists: exists
		do
			Result := c_length (item)
		ensure
			result_correct: Result = c_length (item)
		end

	set_length (a_value: INTEGER) 
			-- Change the value of member `length` to `a_value`.
		require
			exists: exists
		do
			set_c_length (item, a_value)
		ensure
			length_set: a_value = length
		end

	data_deallocator: POINTER
			-- Access member `data_deallocator`
		require
			exists: exists
		do
			Result := c_data_deallocator (item)
		ensure
			result_correct: Result = c_data_deallocator (item)
		end

	set_data_deallocator (a_value: POINTER) 
			-- Change the value of member `data_deallocator` to `a_value`.
		require
			exists: exists
		do
			set_c_data_deallocator (item, a_value)
		ensure
			data_deallocator_set: a_value = data_deallocator
		end

feature {NONE} -- Implementation wrapper for struct struct TF_Buffer

	sizeof_external: INTEGER 
		external
			"C inline use <c_api.h>"
		alias
			"sizeof(struct TF_Buffer)"
		end

	c_data (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((struct TF_Buffer*)$an_item)->data
			]"
		end

	set_c_data (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((struct TF_Buffer*)$an_item)->data =  (void const*)$a_value
			]"
		ensure
			data_set: a_value = c_data (an_item)
		end

	c_length (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((struct TF_Buffer*)$an_item)->length
			]"
		end

	set_c_length (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((struct TF_Buffer*)$an_item)->length =  (size_t)$a_value
			]"
		ensure
			length_set: a_value = c_length (an_item)
		end

	c_data_deallocator (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((struct TF_Buffer*)$an_item)->data_deallocator
			]"
		end

	set_c_data_deallocator (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <c_api.h>"
		alias
			"[
				((struct TF_Buffer*)$an_item)->data_deallocator =  (void (*) (void *data, size_t length))$a_value
			]"
		ensure
			data_deallocator_set: a_value = c_data_deallocator (an_item)
		end

end
